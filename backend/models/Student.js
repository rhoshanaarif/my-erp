const mongoose = require("mongoose");

// Define the student schema
const studentSchema = new mongoose.Schema({
  // personel details
  personalDetails: {
    studentName: { type: String, required: true },
    rollNo: { type: String,},
    email: { type: String, required: true },
    department: { type: String },
    dob: { type: String, required: true },
    year: { type: String },
    gender: { type: String, required: true },
    contactNumber: { type: Number, required: true },
    fatherName: { type: String, required: true },
    fatherContactNumber: { type: Number, required: true },
    motherName: { type: String, required: true },
    motherContactNumber: { type: Number, required: true },
    aadharNumber: { type: Number, required: true },
    bloodGroup: { type: String,required: true  },
    nationality: { type: String, required: true  },
    religion: { type: String, },
    community: { type: String,required: true  },
    caste: { type: String,required: true  },
  },
  //Address details
  addressDetails: {
    doorNo: { type: String, required: true  },
    street: { type: String, required: true  },
    postalCity: { type: String, required: true  },
    postalCode: { type: Number,required: true   },
    district: { type: String,  required: true },
    state: { type: String,required: true   },
    presentDoorNo: { type: String,required: true   },
    presentStreet: { type: String,required: true   },
    presentPostalCity: { type: String,required: true   },
    presentPostalCode: { type: Number, required: true  },
    presentDistrict: { type: String,required: true   },
    presentState: { type: String,required: true   },
  },
  //Common details
  commonDetails: {
    isMarried: { type: String,required: true  },
    spouseName: { type: String,required: true  },
    isDisabled: { type: String,required: true  },
    disabilityPercentage: { type: String,required: true  },
    isExServicemenChild: { type: String,required: true  },
    exServicemenType: { type: String,required: true  },
    isSportsPerson: { type: String,required: true  },
    sportsName: { type: String,required: true  },
    sportsLevel: { type: String,required: true  },
    isRCChristian: { type: String,required: true  },
    parishName: { type: String,required: true  },
    eligibilityForQuota: { type: String,required: true  },
  },
  // Mark Details
  markDetails: {
    instution: { type: String,required: true   },
    graduation: { type: String,required: true   },
    registerNo: { type: Number,required: true   },
    subjects: [
      {
        subjectName: { type: String,required: true   },
        subjectCode: { type: String,required: true   },
        maxMark: { type: Number,required: true   },
        minMark: { type: Number,required: true   },
        scoredMark: { type: Number,required: true   },
      },
      // ... More subjects ...
    ],
    totalMarks: { type: Number,required: true   },
    percentage: { type: String,required: true   },
  },
  // Office Details
  officeDetails: {
    institution: { type: String,required: true   },
    programmeAdmittedFor: { type: String,required: true   },
    yearAdmitted: { type: String,required: true   },
    semester: { type: String,required: true   },
    semesterType: { type: String,required: true   },
    classId: { type: mongoose.Schema.Types.ObjectId, ref: "Class" },
    batch: { type: String,required: true   },
    joinedAcademicYear: { type: String,required: true   },
    currentAcademicYear: { type: String,required: true   },
    admissionDate: { type: Date,required: true   },
    admittedIn: { type: String,required: true   },
    ancillarySubjects: { type: String,required: true   },
    remarks: { type: String,required: true   },
    mediumOfInstruction: { type: String,required: true   },
    lastDateLeftInCollege: { type: Date,required: true   },
    feesDuesStatus: { type: String,required: true   },
    mainAndAlliedCourse: { type: String,required: true   },
    part1Language: { type: String,required: true   },
    part4Language: { type: String,required: true   },
    part5Language: { type: String,required: true   },
    nssNccSportsLibrary: { type: String,required: true   },
    quota: { type: String,required: true   },
    admissionStatus: { type: String,required: true   },
    numberOfCertificatesRequired: { type: Number,required: true   },
    numberOfCertificatesReceived: { type: Number,required: true   },
    certificatesToBeProduced: { type: Number,required: true   },
    verifiedBy: { type: String,required: true   },
    universityRegisterNo: { type: Number,required: true   },
    rollNo:{ type: String,required: true   },
    lastDateOfAttendanceMarked: { type: Date,required: true   },
    attendancePercentage: { type: String,required: true   },
    dateOfLeaving: { type: Date,required: true   },
    motherTongue: { type: String,required: true   },
    tcYearDept: { type: String,required: true   },
    promotionStatus: { type: String,required: true   },
    tcStatus: { type: String,required: true   },
    fatherOccupation: { type: String,required: true   },
    fatherAnnualIncome: { type: String,required: true   },
    tcDateIssuedOn: { type: Date,required: true   },
    studentType: { type: String,required: true   },
    numberOfApologiesReceived: { type: Number,required: true   },
    conductAndCharacter: { type: String,required: true   },
    laptopIssued: { type: String,required: true   },
    laptopIssuedDate: { type: Date,required: true},
    classNo: { type: String,required: true   },
    admissionNo: { type: String,required: true },
    busRouteNumber: { type: String,required: true  },
    trip: { type: String,required: true   },
    photo: { type: String,required: true },
  },
  
});

// Create the student model
const Student = mongoose.model("Student", studentSchema);

module.exports = Student;